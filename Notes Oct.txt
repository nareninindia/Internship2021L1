18th Oct 2021

Repository or repo -> Store project files
Github.com/bitbucket.com -> Project repos -> Store project files.

Narendra -> 10 lines of code -> Remote repo -> Downloads the code from the remote repo -> Add 10 more lines to same file. -> Upload to remote repo -> Narendra - Download the latest code from the remote repo.

Login.java
Logout.java

Logout.java -> 10 more lines, remove 2 lines of code

Google drive -> Upload all the files everytime
Google drive -> Upload only changed files
Google drive -> Upload only changed lines

Overwrite one other's code
Drive may not have tested code
Multiple files can't handle
Multiple team members can't handle

Version contrrol/Source control

Git, Svn(Subversion), TFS(Microsoft), Mercurial

Git, Github.com

Git -> Concept
Github.com -> Implementation
Github -> Opensource -> Free

Git: We'll see the changes we did only

Repository - Place we upload the code to.
Commit -> The process of uploading the code to repositories.
Push -> The process of uploading the code to remote repository.
Fetch -> The process of downloading the code from remote repositories.
Pull -> The process of downloading the code from repositories.

Git - Local repository, remote repository
Svn - Remote repository

Repository - Local repository - .git - Commit - Commit - Push - Remote repo - Fetch code - .git - Pull - File system

Repository - Local Repository - Changes - Commit + Push - Remote repo - Fetch + Pull

Commit - SHA256 key - order of commits maintained

Repository - Multiple branches
Branch -> Folder

dev_order_lifecyle - Code specifically tracking order lifecycle (Place, Accept, Cook, Delivery) - tested
master - Tested and reviewed code - Deploy

dev_order_lifecyle(13) -> master(10)
Pull request(PR) -> Show commits(3) -> Review the PR -> Merge
dev_order_lifecyle(13) -> master(13)

Version control/source control
Git
Github.com
Repository - Store code
Branch - Folder
Local, Remote repos - Local, Remote repository
.git - Keeps track of changes, order of changes
Commit - Sending code to local repo
Push - Sending commits to remote repo
Fetch - Getting a commit into .git
Pull - Making changes to FS based on .git
Pull request/PR - Review code from one branch to another branch
Merge - Move the code from one branch to another branch
Clone - Create a new local repo based on an existing remote repo.

Exercise - Github.com, Sourcetree tool in laptop

-----
19th Oct 2021

Sourcetree
Connecting Github account in Sourcetree
Added a new public repo in Github
Cloned the repo in Sourcetree
Added a new file in repo/project folder
Committed and pushed to remote.
Changed an existing file in local, committed and pushed to remote .
Changed an existing file in remote, pulled it into local.
Gave access to another dev in Github.

Exercise: Create a project in Github, add some files to remote repo from Sourcetree, give access to 'nareninindia'
-----

28th Oct 2021
Class -> Template with properties
Object -> Instance of class
Constructor -> Way to initialize a class
Default constructor
Non-parameterized constructor
Parameterized constructor
Constructor overloading -> Multiple constructors for same class
Methods

Student s = new Student(); // default constructor, non-parameterized constructor
Student s = new Student(1, "Rajesh", 3); // parameterized constructor

Exercise:
1. Complete all the earlier programs and put them in Github.
2. Run the HelloWorld and Student programs from my repo in DrJava or Geany and send screenshots.
3. Commit the code files to your Github project and send the Github links in Whatsapp group.
4. While commiting code, do not commit .class files
